generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  createdAt DateTime  @default(now())
  customer  Customer?
  seller    Seller?
}

model Seller {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique
  products Product[]
  user     User      @relation(fields: [userId], references: [id])
}

model Customer {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
  orders Order[] @relation("CustomerOrders")
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  priceCents  Int
  sellerId    Int
  createdAt   DateTime       @default(now())
  description String?
  stock       Int?
  orderItems  OrderItem[]
  seller      Seller         @relation(fields: [sellerId], references: [id])
  images      ProductImage[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Order {
  id            Int         @id @default(autoincrement())
  customerId    Int
  totalCents    Int
  status        OrderStatus @default(CART)
  createdAt     DateTime    @default(now())
  paymentMethod String?
  customer      Customer    @relation("CustomerOrders", fields: [customerId], references: [id])
  items         OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  unitCents Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum OrderStatus {
  CART
  PLACED
  CANCELLED
  COMPLETED
}
