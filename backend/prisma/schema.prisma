generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  seller    Seller?
  createdAt DateTime @default(now())
  orders    Order[]  @relation("customerOrders")
}

model Seller {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
  products  Product[]
  orders Order[]
}

model Product {
  id         Int           @id @default(autoincrement())
  name       String
  priceCents Int
  sellerId   Int
  seller     Seller        @relation(fields: [sellerId], references: [id])
  createdAt  DateTime      @default(now())
  orderItems OrderItem[]
  images     ProductImage[]
}

model ProductImage {
  id         Int     @id @default(autoincrement())
  productId  Int
  url        String
  product    Product @relation(fields: [productId], references: [id])
}

model Order {
  id          Int        @id @default(autoincrement())
  customerId  Int
  sellerId    Int
  totalCents  Int
  status      OrderStatus @default(CART) // CART, PLACED, CANCELLED, COMPLETED
  createdAt   DateTime    @default(now())
  items       OrderItem[]
  customer    User        @relation("customerOrders", fields: [customerId], references: [id])
  seller      Seller      @relation(fields: [sellerId], references: [id])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  orderId    Int
  productId  Int
  quantity   Int
  unitCents  Int
  product    Product @relation(fields: [productId], references: [id])
  order      Order   @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  CART
  PLACED
  CANCELLED
  COMPLETED
}
