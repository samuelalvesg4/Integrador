{"ast":null,"code":"import _objectSpread from\"C:/Users/Samuel Alves/Desktop/Integrador/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();export const useCart=()=>useContext(CartContext);export const CartProvider=_ref=>{let{children}=_ref;const[cartItems,setCartItems]=useState(()=>{try{const localData=localStorage.getItem('cartItems');return localData?JSON.parse(localData):[];}catch(error){return[];}});const[selectedItems,setSelectedItems]=useState(()=>{const localData=localStorage.getItem('cartItems');const items=localData?JSON.parse(localData):[];return items.map(item=>item.id);});// --- NOVO ESTADO APENAS PARA O CHECKOUT ---\nconst[checkoutItems,setCheckoutItems]=useState([]);useEffect(()=>{localStorage.setItem('cartItems',JSON.stringify(cartItems));},[cartItems]);const addToCart=product=>{// A validação principal acontece antes de qualquer outra coisa\nconst itemInCart=cartItems.find(item=>item.id===product.id);const currentQuantityInCart=itemInCart?itemInCart.quantity:0;if(currentQuantityInCart>=product.stock){alert(\"Você já adicionou a quantidade máxima em estoque para este item.\");return;// Impede a adição do item\n}setCartItems(prevItems=>{const existingItem=prevItems.find(item=>item.id===product.id);if(existingItem){return prevItems.map(item=>item.id===product.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item);}else{setSelectedItems(prevSelected=>[...prevSelected,product.id]);return[...prevItems,_objectSpread(_objectSpread({},product),{},{quantity:1})];}});};const removeItemFromCart=id=>{setCartItems(prevItems=>prevItems.filter(item=>item.id!==id));setSelectedItems(prevSelected=>prevSelected.filter(itemId=>itemId!==id));};const clearCart=()=>{// Agora, clearCart limpa o carrinho principal, não os itens do checkout.\nconst itemsToRemove=cartItems.filter(item=>selectedItems.includes(item.id));const newCartItems=cartItems.filter(item=>!selectedItems.includes(item.id));setCartItems(newCartItems);setSelectedItems([]);setCheckoutItems([]);};const toggleItemSelection=productId=>{setSelectedItems(prevSelected=>prevSelected.includes(productId)?prevSelected.filter(id=>id!==productId):[...prevSelected,productId]);};const toggleSelectAll=()=>{if(selectedItems.length===cartItems.length){setSelectedItems([]);}else{setSelectedItems(cartItems.map(item=>item.id));}};// --- NOVA FUNÇÃO PARA INICIAR O CHECKOUT DE FORMA SEGURA ---\nconst startCheckout=itemsToCheckout=>{setCheckoutItems(itemsToCheckout);};// ... (função updateItemQuantity sem alteração)\nconst updateItemQuantity=(id,delta)=>{setCartItems(prevItems=>{return prevItems.map(item=>item.id===id?_objectSpread(_objectSpread({},item),{},{quantity:Math.max(1,item.quantity+delta)}):item);});};const value={cartItems,addToCart,updateItemQuantity,removeItemFromCart,clearCart,selectedItems,toggleItemSelection,toggleSelectAll,// --- EXPOR NOVOS VALORES ---\ncheckoutItems,startCheckout};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","CartContext","useCart","CartProvider","_ref","children","cartItems","setCartItems","localData","localStorage","getItem","JSON","parse","error","selectedItems","setSelectedItems","items","map","item","id","checkoutItems","setCheckoutItems","setItem","stringify","addToCart","product","itemInCart","find","currentQuantityInCart","quantity","stock","alert","prevItems","existingItem","_objectSpread","prevSelected","removeItemFromCart","filter","itemId","clearCart","itemsToRemove","includes","newCartItems","toggleItemSelection","productId","toggleSelectAll","length","startCheckout","itemsToCheckout","updateItemQuantity","delta","Math","max","value","Provider"],"sources":["C:/Users/Samuel Alves/Desktop/Integrador/frontend/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n    const [cartItems, setCartItems] = useState(() => {\n        try {\n            const localData = localStorage.getItem('cartItems');\n            return localData ? JSON.parse(localData) : [];\n        } catch (error) { return []; }\n    });\n\n    const [selectedItems, setSelectedItems] = useState(() => {\n        const localData = localStorage.getItem('cartItems');\n        const items = localData ? JSON.parse(localData) : [];\n        return items.map(item => item.id);\n    });\n\n    // --- NOVO ESTADO APENAS PARA O CHECKOUT ---\n    const [checkoutItems, setCheckoutItems] = useState([]);\n\n    useEffect(() => {\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\n    }, [cartItems]);\n\n    const addToCart = (product) => {\n    // A validação principal acontece antes de qualquer outra coisa\n    const itemInCart = cartItems.find((item) => item.id === product.id);\n    const currentQuantityInCart = itemInCart ? itemInCart.quantity : 0;\n\n    if (currentQuantityInCart >= product.stock) {\n        alert(\"Você já adicionou a quantidade máxima em estoque para este item.\");\n        return; // Impede a adição do item\n    }\n\n    setCartItems((prevItems) => {\n        const existingItem = prevItems.find((item) => item.id === product.id);\n        if (existingItem) {\n            return prevItems.map((item) =>\n                item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item\n            );\n        } else {\n            setSelectedItems(prevSelected => [...prevSelected, product.id]);\n            return [...prevItems, { ...product, quantity: 1 }];\n        }\n    });\n};\n    \n    const removeItemFromCart = (id) => {\n        setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\n        setSelectedItems(prevSelected => prevSelected.filter(itemId => itemId !== id));\n    };\n\n    const clearCart = () => {\n        // Agora, clearCart limpa o carrinho principal, não os itens do checkout.\n        const itemsToRemove = cartItems.filter(item => selectedItems.includes(item.id));\n        const newCartItems = cartItems.filter(item => !selectedItems.includes(item.id));\n        setCartItems(newCartItems);\n        setSelectedItems([]);\n        setCheckoutItems([]);\n    };\n\n    const toggleItemSelection = (productId) => {\n        setSelectedItems(prevSelected =>\n            prevSelected.includes(productId)\n                ? prevSelected.filter(id => id !== productId)\n                : [...prevSelected, productId]\n        );\n    };\n\n    const toggleSelectAll = () => {\n        if (selectedItems.length === cartItems.length) {\n            setSelectedItems([]);\n        } else {\n            setSelectedItems(cartItems.map(item => item.id));\n        }\n    };\n    \n    // --- NOVA FUNÇÃO PARA INICIAR O CHECKOUT DE FORMA SEGURA ---\n    const startCheckout = (itemsToCheckout) => {\n        setCheckoutItems(itemsToCheckout);\n    };\n\n    // ... (função updateItemQuantity sem alteração)\n    const updateItemQuantity = (id, delta) => {\n        setCartItems((prevItems) => {\n            return prevItems.map((item) =>\n                item.id === id ? { ...item, quantity: Math.max(1, item.quantity + delta) } : item\n            );\n        });\n    };\n\n\n    const value = {\n        cartItems,\n        addToCart,\n        updateItemQuantity,\n        removeItemFromCart,\n        clearCart,\n        selectedItems,\n        toggleItemSelection,\n        toggleSelectAll,\n        // --- EXPOR NOVOS VALORES ---\n        checkoutItems,\n        startCheckout,\n    };\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}