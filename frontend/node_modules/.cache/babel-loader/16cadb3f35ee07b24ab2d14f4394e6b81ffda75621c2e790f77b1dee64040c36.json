{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel Alves\\\\Desktop\\\\Integrador\\\\frontend\\\\src\\\\pages\\\\RegisterProduct.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../components/Header\";\nimport { registerProduct, uploadImages } from '../services/api';\nimport useAuth from '../hooks/useAuth';\nimport imageCompression from 'browser-image-compression';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterProduct = () => {\n  _s();\n  // Garante que o usuário logado é um vendedor\n  useAuth({\n    role: 'seller'\n  });\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [price, setPrice] = useState('');\n  const [stock, setStock] = useState('');\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleFileChange = async e => {\n    const files = Array.from(e.target.files);\n    const compressedFiles = [];\n    for (const file of files) {\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 1920,\n        useWebWorker: true\n      };\n      try {\n        const compressedFile = await imageCompression(file, options);\n        compressedFiles.push(compressedFile);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    setSelectedFiles(compressedFiles);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('Sessão expirada. Por favor, faça login novamente.');\n        navigate('/login');\n        setLoading(false);\n        return;\n      }\n\n      // 1. Cadastrar o produto primeiro para obter o ID\n      const productData = {\n        name,\n        description,\n        price: parseFloat(price) * 100,\n        stock: parseInt(stock, 10),\n        images: [] // Começa com um array vazio de imagens\n      };\n      const newProduct = await registerProduct(productData);\n      const productId = newProduct.id; // Assume que o backend retorna o ID do novo produto\n\n      let imageUrls = [];\n\n      // 2. Fazer o upload das imagens usando o ID do produto recém-criado\n      if (selectedFiles.length > 0) {\n        const uploadResponse = await uploadImages(selectedFiles, productId);\n        imageUrls = uploadResponse.imageUrls; // Armazena as URLs retornadas\n      }\n      alert(\"Produto cadastrado e imagens enviadas com sucesso!\");\n      navigate('/');\n    } catch (error) {\n      var _error$body;\n      console.error(\"Erro ao cadastrar produto:\", error);\n      alert(`Erro ao cadastrar produto: ${((_error$body = error.body) === null || _error$body === void 0 ? void 0 : _error$body.error) || error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center mt-10 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-lg bg-white rounded-lg shadow p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"flex flex-col gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-6 text-center text-gray-800\",\n            children: \"Cadastrar Produto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Nome do Produto\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            className: \"border p-2 rounded w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Descri\\xE7\\xE3o\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            className: \"border p-2 rounded w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            placeholder: \"Pre\\xE7o (R$)\",\n            value: price,\n            onChange: e => setPrice(e.target.value),\n            required: true,\n            className: \"border p-2 rounded w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Estoque\",\n            value: stock,\n            onChange: e => setStock(e.target.value),\n            required: true,\n            className: \"border p-2 rounded w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            onChange: handleFileChange,\n            className: \"border p-2 rounded w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            className: \"bg-blue-600 text-white px-4 py-2 rounded-full w-full hover:bg-blue-700 transition duration-300\",\n            children: loading ? 'Cadastrando...' : 'Cadastrar Produto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterProduct, \"xwEMG5wewfOfzZIirFObSTg8DPA=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = RegisterProduct;\nexport default RegisterProduct;\nvar _c;\n$RefreshReg$(_c, \"RegisterProduct\");","map":{"version":3,"names":["React","useState","useNavigate","Header","registerProduct","uploadImages","useAuth","imageCompression","jsxDEV","_jsxDEV","RegisterProduct","_s","role","name","setName","description","setDescription","price","setPrice","stock","setStock","selectedFiles","setSelectedFiles","loading","setLoading","navigate","handleFileChange","e","files","Array","from","target","compressedFiles","file","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","push","error","console","handleSubmit","preventDefault","token","localStorage","getItem","alert","productData","parseFloat","parseInt","images","newProduct","productId","id","imageUrls","length","uploadResponse","_error$body","body","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","required","step","multiple","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Samuel Alves/Desktop/Integrador/frontend/src/pages/RegisterProduct.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Header from \"../components/Header\";\nimport { registerProduct, uploadImages } from '../services/api';\nimport useAuth from '../hooks/useAuth';\nimport imageCompression from 'browser-image-compression';\n\nconst RegisterProduct = () => {\n    // Garante que o usuário logado é um vendedor\n    useAuth({ role: 'seller' });\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n    const [stock, setStock] = useState('');\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleFileChange = async (e) => {\n        const files = Array.from(e.target.files);\n        const compressedFiles = [];\n\n        for (const file of files) {\n            const options = {\n                maxSizeMB: 1,\n                maxWidthOrHeight: 1920,\n                useWebWorker: true,\n            };\n\n            try {\n                const compressedFile = await imageCompression(file, options);\n                compressedFiles.push(compressedFile);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        setSelectedFiles(compressedFiles);\n    };\n\n    const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            alert('Sessão expirada. Por favor, faça login novamente.');\n            navigate('/login');\n            setLoading(false);\n            return;\n        }\n\n        // 1. Cadastrar o produto primeiro para obter o ID\n        const productData = {\n            name,\n            description,\n            price: parseFloat(price) * 100,\n            stock: parseInt(stock, 10),\n            images: [], // Começa com um array vazio de imagens\n        };\n\n        const newProduct = await registerProduct(productData);\n        const productId = newProduct.id; // Assume que o backend retorna o ID do novo produto\n\n        let imageUrls = [];\n\n        // 2. Fazer o upload das imagens usando o ID do produto recém-criado\n        if (selectedFiles.length > 0) {\n            const uploadResponse = await uploadImages(selectedFiles, productId);\n            imageUrls = uploadResponse.imageUrls; // Armazena as URLs retornadas\n        }\n\n        alert(\"Produto cadastrado e imagens enviadas com sucesso!\");\n        navigate('/');\n\n    } catch (error) {\n        console.error(\"Erro ao cadastrar produto:\", error);\n        alert(`Erro ao cadastrar produto: ${error.body?.error || error.message}`);\n    } finally {\n        setLoading(false);\n    }\n};\n\n    return (\n        <div className=\"min-h-screen bg-gray-100\">\n            <Header />\n            <div className=\"w-full flex justify-center mt-10 px-4 sm:px-6 lg:px-8\">\n                <div className=\"w-full max-w-lg bg-white rounded-lg shadow p-8\">\n                    <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n                    <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">Cadastrar Produto</h2>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Nome do Produto\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            required\n                            className=\"border p-2 rounded w-full\"\n                        />\n                        <textarea\n                            placeholder=\"Descrição\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                            required\n                            className=\"border p-2 rounded w-full\"\n                        />\n                        <input\n                            type=\"number\"\n                            step=\"0.01\"\n                            placeholder=\"Preço (R$)\"\n                            value={price}\n                            onChange={(e) => setPrice(e.target.value)}\n                            required\n                            className=\"border p-2 rounded w-full\"\n                        />\n                        <input\n                            type=\"number\"\n                            placeholder=\"Estoque\"\n                            value={stock}\n                            onChange={(e) => setStock(e.target.value)}\n                            required\n                            className=\"border p-2 rounded w-full\"\n                        />\n                        <input\n                            type=\"file\"\n                            multiple\n                            onChange={handleFileChange}\n                            className=\"border p-2 rounded w-full\"\n                        />\n                        <button\n                            type=\"submit\"\n                            disabled={loading}\n                            className=\"bg-blue-600 text-white px-4 py-2 rounded-full w-full hover:bg-blue-700 transition duration-300\"\n                        >\n                            {loading ? 'Cadastrando...' : 'Cadastrar Produto'}\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterProduct;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}