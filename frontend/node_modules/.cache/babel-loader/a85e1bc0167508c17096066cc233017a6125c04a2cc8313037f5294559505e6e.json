{"ast":null,"code":"const API = process.env.REACT_APP_API || 'http://localhost:4000/api';\nexport async function request(path, options = {}) {\n  const token = localStorage.getItem('token');\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(options.headers || {})\n  };\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  const res = await fetch(`${API}${path}`, {\n    ...options,\n    headers\n  });\n  const text = await res.text();\n  let data;\n  try {\n    data = text ? JSON.parse(text) : null;\n  } catch {\n    data = text;\n  }\n  if (!res.ok) {\n    const errorBody = data || text;\n    const err = new Error((errorBody === null || errorBody === void 0 ? void 0 : errorBody.message) || (errorBody === null || errorBody === void 0 ? void 0 : errorBody.error) || res.statusText || 'Erro na requisição');\n    err.status = res.status;\n    err.body = errorBody;\n    throw err;\n  }\n  return data;\n}\nexport async function login(email, password) {\n  return request('/login', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n}\nexport async function register(name, email, password, role) {\n  return request('/register', {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      email,\n      password,\n      role\n    })\n  });\n}","map":{"version":3,"names":["API","process","env","REACT_APP_API","request","path","options","token","localStorage","getItem","headers","res","fetch","text","data","JSON","parse","ok","errorBody","err","Error","message","error","statusText","status","body","login","email","password","method","stringify","register","name","role"],"sources":["C:/Users/Samuel Alves/Desktop/e-commerce/frontend/src/services/api.js"],"sourcesContent":["const API = process.env.REACT_APP_API || 'http://localhost:4000/api';\r\n\r\nexport async function request(path, options = {}) {\r\n  const token = localStorage.getItem('token');\r\n  const headers = { 'Content-Type': 'application/json', ...(options.headers || {}) };\r\n  if (token) headers['Authorization'] = `Bearer ${token}`;\r\n\r\n  const res = await fetch(`${API}${path}`, { ...options, headers });\r\n  \r\n  const text = await res.text();\r\n  let data;\r\n  try { \r\n    data = text ? JSON.parse(text) : null; \r\n  } catch { \r\n    data = text; \r\n  }\r\n\r\n  if (!res.ok) {\r\n    const errorBody = data || text;\r\n    const err = new Error(errorBody?.message || errorBody?.error || res.statusText || 'Erro na requisição');\r\n    err.status = res.status;\r\n    err.body = errorBody;\r\n    throw err;\r\n  }\r\n  return data;\r\n}\r\n\r\nexport async function login(email, password) {\r\n  return request('/login', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n}\r\n\r\nexport async function register(name, email, password, role) {\r\n  return request('/register', {\r\n    method: 'POST',\r\n    body: JSON.stringify({ name, email, password, role }),\r\n  });\r\n}"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,2BAA2B;AAEpE,OAAO,eAAeC,OAAOA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,OAAO,GAAG;IAAE,cAAc,EAAE,kBAAkB;IAAE,IAAIJ,OAAO,CAACI,OAAO,IAAI,CAAC,CAAC;EAAE,CAAC;EAClF,IAAIH,KAAK,EAAEG,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAEvD,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,GAAG,GAAGK,IAAI,EAAE,EAAE;IAAE,GAAGC,OAAO;IAAEI;EAAQ,CAAC,CAAC;EAEjE,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;EAC7B,IAAIC,IAAI;EACR,IAAI;IACFA,IAAI,GAAGD,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC,CAAC,MAAM;IACNC,IAAI,GAAGD,IAAI;EACb;EAEA,IAAI,CAACF,GAAG,CAACM,EAAE,EAAE;IACX,MAAMC,SAAS,GAAGJ,IAAI,IAAID,IAAI;IAC9B,MAAMM,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,OAAO,MAAIH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEI,KAAK,KAAIX,GAAG,CAACY,UAAU,IAAI,oBAAoB,CAAC;IACvGJ,GAAG,CAACK,MAAM,GAAGb,GAAG,CAACa,MAAM;IACvBL,GAAG,CAACM,IAAI,GAAGP,SAAS;IACpB,MAAMC,GAAG;EACX;EACA,OAAOL,IAAI;AACb;AAEA,OAAO,eAAeY,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC3C,OAAOxB,OAAO,CAAC,QAAQ,EAAE;IACvByB,MAAM,EAAE,MAAM;IACdJ,IAAI,EAAEV,IAAI,CAACe,SAAS,CAAC;MAAEH,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeG,QAAQA,CAACC,IAAI,EAAEL,KAAK,EAAEC,QAAQ,EAAEK,IAAI,EAAE;EAC1D,OAAO7B,OAAO,CAAC,WAAW,EAAE;IAC1ByB,MAAM,EAAE,MAAM;IACdJ,IAAI,EAAEV,IAAI,CAACe,SAAS,CAAC;MAAEE,IAAI;MAAEL,KAAK;MAAEC,QAAQ;MAAEK;IAAK,CAAC;EACtD,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}