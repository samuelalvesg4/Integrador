{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel Alves\\\\Desktop\\\\Integrador\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Home.jsx\nimport React, { useEffect, useState } from 'react';\nimport ProductCard from '../components/ProductCard';\nimport Header from '../components/Header';\nimport { getProducts } from '../services/api';\nimport Wrapper from '../components/Wrapper';\nimport '../components/grid.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchAllProducts = async () => {\n      try {\n        const data = await getProducts();\n        setProducts(data);\n      } catch (err) {\n        console.error(\"Erro ao buscar todos os produtos\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllProducts();\n    const handler = () => fetchAllProducts();\n    window.addEventListener(\"productAdded\", handler);\n    return () => window.removeEventListener(\"productAdded\", handler);\n  }, []);\n\n  // Define o número de células do grid para o layout 5x5\n  const gridSize = 25;\n  const productsToDisplay = products.slice(0, gridSize); // Pega apenas os primeiros 25 produtos\n  const emptyCells = gridSize - productsToDisplay.length;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: Array.from({\n          length: gridSize\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item loading\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Carregando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this) : products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: [productsToDisplay.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: /*#__PURE__*/_jsxDEV(ProductCard, {\n            product: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)), Array.from({\n          length: emptyCells\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item empty\"\n        }, `empty-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nenhum produto cadastrado ainda.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"KWid68LpBxbFhyja5dauhUIHvyY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","ProductCard","Header","getProducts","Wrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","products","setProducts","loading","setLoading","fetchAllProducts","data","err","console","error","handler","window","addEventListener","removeEventListener","gridSize","productsToDisplay","slice","emptyCells","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Array","from","_","index","map","product","id","style","textAlign","padding","_c","$RefreshReg$"],"sources":["C:/Users/Samuel Alves/Desktop/Integrador/frontend/src/pages/Home.jsx"],"sourcesContent":["// frontend/src/pages/Home.jsx\nimport React, { useEffect, useState } from 'react';\nimport ProductCard from '../components/ProductCard';\nimport Header from '../components/Header';\nimport { getProducts } from '../services/api';\nimport Wrapper from '../components/Wrapper';\nimport '../components/grid.css';\n\nconst Home = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchAllProducts = async () => {\n            try {\n                const data = await getProducts();\n                setProducts(data);\n            } catch (err) {\n                console.error(\"Erro ao buscar todos os produtos\", err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchAllProducts();\n\n        const handler = () => fetchAllProducts();\n        window.addEventListener(\"productAdded\", handler);\n        return () => window.removeEventListener(\"productAdded\", handler);\n    }, []);\n\n    // Define o número de células do grid para o layout 5x5\n    const gridSize = 25;\n    const productsToDisplay = products.slice(0, gridSize); // Pega apenas os primeiros 25 produtos\n    const emptyCells = gridSize - productsToDisplay.length;\n\n    return (\n        <>\n            <Header /><br/>\n            <Wrapper>\n                {/* Renderiza o grid container somente se não estiver carregando e houver produtos */}\n                {loading ? (\n                    <div className=\"grid-container\">\n                        {Array.from({ length: gridSize }, (_, index) => (\n                            <div key={index} className=\"grid-item loading\">\n                                <p>Carregando...</p>\n                            </div>\n                        ))}\n                    </div>\n                ) : products.length > 0 ? (\n                    <div className=\"grid-container\">\n                        {/* Mapeia e renderiza as ProductCards para cada produto */}\n                        {productsToDisplay.map((product) => (\n                            <div key={product.id} className=\"grid-item\">\n                                <ProductCard product={product} />\n                            </div>\n                        ))}\n                        \n                        {/* Preenche o restante do grid com células vazias se houver menos de 25 produtos */}\n                        {Array.from({ length: emptyCells }, (_, index) => (\n                            <div key={`empty-${index}`} className=\"grid-item empty\"></div>\n                        ))}\n                    </div>\n                ) : (\n                    <div style={{ textAlign: 'center', padding: '20px' }}>\n                        <p>Nenhum produto cadastrado ainda.</p>\n                    </div>\n                )}\n            </Wrapper>\n        </>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}